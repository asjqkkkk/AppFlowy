use crate::{ErrorCode, FlowyError};
use client_api::error::{AppResponseError, ErrorCode as AppErrorCode};

impl From<AppResponseError> for FlowyError {
  fn from(error: AppResponseError) -> Self {
    let code = match error.code {
      AppErrorCode::Ok => ErrorCode::Internal,
      AppErrorCode::Unhandled => ErrorCode::Internal,
      AppErrorCode::RecordNotFound => ErrorCode::RecordNotFound,
      AppErrorCode::RecordAlreadyExists => ErrorCode::RecordAlreadyExists,
      AppErrorCode::InvalidEmail => ErrorCode::EmailFormatInvalid,
      AppErrorCode::InvalidPassword => ErrorCode::PasswordFormatInvalid,
      AppErrorCode::OAuthError => ErrorCode::UserUnauthorized,
      AppErrorCode::MissingPayload => ErrorCode::MissingPayload,
      AppErrorCode::OpenError => ErrorCode::Internal,
      AppErrorCode::InvalidUrl => ErrorCode::InvalidURL,
      AppErrorCode::InvalidRequest => ErrorCode::InvalidRequest,
      AppErrorCode::InvalidOAuthProvider => ErrorCode::InvalidAuthConfig,
      AppErrorCode::NotLoggedIn => ErrorCode::UserUnauthorized,
      AppErrorCode::NotEnoughPermissions => ErrorCode::NotEnoughPermissions,
      AppErrorCode::NetworkError => ErrorCode::NetworkError,
      AppErrorCode::RequestTimeout => ErrorCode::RequestTimeout,
      AppErrorCode::PayloadTooLarge => ErrorCode::PayloadTooLarge,
      AppErrorCode::UserUnAuthorized => ErrorCode::UserUnauthorized,
      AppErrorCode::WorkspaceLimitExceeded => ErrorCode::WorkspaceLimitExceeded,
      AppErrorCode::WorkspaceMemberLimitExceeded => ErrorCode::WorkspaceMemberLimitExceeded,
      AppErrorCode::AIResponseLimitExceeded => ErrorCode::AIResponseLimitExceeded,
      AppErrorCode::AIImageResponseLimitExceeded => ErrorCode::AIImageResponseLimitExceeded,
      AppErrorCode::AIMaxRequired => ErrorCode::AIMaxRequired,
      AppErrorCode::FileStorageLimitExceeded => ErrorCode::FileStorageLimitExceeded,
      AppErrorCode::SingleUploadLimitExceeded => ErrorCode::SingleUploadLimitExceeded,
      AppErrorCode::CustomNamespaceDisabled => ErrorCode::CustomNamespaceRequirePlanUpgrade,
      AppErrorCode::CustomNamespaceDisallowed => ErrorCode::CustomNamespaceNotAllowed,
      AppErrorCode::PublishNamespaceAlreadyTaken => ErrorCode::CustomNamespaceAlreadyTaken,
      AppErrorCode::CustomNamespaceTooShort => ErrorCode::CustomNamespaceTooShort,
      AppErrorCode::CustomNamespaceTooLong => ErrorCode::CustomNamespaceTooLong,
      AppErrorCode::CustomNamespaceReserved => ErrorCode::CustomNamespaceReserved,
      AppErrorCode::PublishNameAlreadyExists => ErrorCode::PublishNameAlreadyExists,
      AppErrorCode::PublishNameInvalidCharacter => ErrorCode::PublishNameInvalidCharacter,
      AppErrorCode::PublishNameTooLong => ErrorCode::PublishNameTooLong,
      AppErrorCode::CustomNamespaceInvalidCharacter => ErrorCode::CustomNamespaceInvalidCharacter,
      AppErrorCode::AIServiceUnavailable => ErrorCode::AIServiceUnavailable,
      AppErrorCode::RetryLater => ErrorCode::RetryLater,
      AppErrorCode::RecordDeleted => ErrorCode::RecordNotFound,
      AppErrorCode::DBError => ErrorCode::Internal,
      AppErrorCode::StorageSpaceNotEnough => ErrorCode::ExcessStorageLimited,
      AppErrorCode::Internal => ErrorCode::Internal,
      AppErrorCode::UuidError => ErrorCode::Internal,
      AppErrorCode::IOError => ErrorCode::Internal,
      AppErrorCode::S3ResponseError => ErrorCode::Internal,
      AppErrorCode::SerdeError => ErrorCode::Internal,
      AppErrorCode::NoRequiredData => ErrorCode::Internal,
      AppErrorCode::OverrideWithIncorrectData => ErrorCode::Internal,
      AppErrorCode::PublishNamespaceNotSet => ErrorCode::Internal,
      AppErrorCode::StringLengthLimitReached => ErrorCode::Internal,
      AppErrorCode::InvalidContentType => ErrorCode::Internal,
      AppErrorCode::AppleRevokeTokenError => ErrorCode::Internal,
      AppErrorCode::InvalidPublishedOutline => ErrorCode::Internal,
      AppErrorCode::InvalidFolderView => ErrorCode::Internal,
      AppErrorCode::NotInviteeOfWorkspaceInvitation => ErrorCode::Internal,
      AppErrorCode::MissingView => ErrorCode::Internal,
      AppErrorCode::AccessRequestAlreadyExists => ErrorCode::Internal,
      AppErrorCode::TooManyImportTask => ErrorCode::Internal,
      AppErrorCode::ServiceTemporaryUnavailable => ErrorCode::Internal,
      AppErrorCode::DecodeUpdateError => ErrorCode::Internal,
      AppErrorCode::ApplyUpdateError => ErrorCode::Internal,
      AppErrorCode::ActionTimeout => ErrorCode::RetryLater,
      AppErrorCode::MailerError => ErrorCode::Internal,
      AppErrorCode::LicenseError => ErrorCode::Internal,
      AppErrorCode::InvalidPageData => ErrorCode::Internal,
      AppErrorCode::MemberNotFound => ErrorCode::Internal,
      AppErrorCode::InvalidBlock => ErrorCode::Internal,
      AppErrorCode::AIResponseError => ErrorCode::Internal,
      AppErrorCode::FeatureNotAvailable => ErrorCode::Internal,
      AppErrorCode::InvalidInvitationCode => ErrorCode::Internal,
      AppErrorCode::FreePlanGuestLimitExceeded => ErrorCode::FreePlanGuestLimitExceeded,
      AppErrorCode::InvalidGuest => ErrorCode::InvalidGuest,
      AppErrorCode::PaidPlanGuestLimitExceeded => ErrorCode::PaidPlanGuestLimitExceeded,
    };

    FlowyError::new(code, error.message)
  }
}
